//A modified Kaprekar number is a positive whole number  with  digits, such that when we split its square into two pieces - a right hand piece  with  digits and a left hand piece  that contains the remaining  or  digits, the sum of the pieces is equal to the original number (i.e.  +  = ).

Note: r may have leading zeros.

Here's an explanation from Wikipedia about the ORIGINAL Kaprekar Number (spot the difference!): In mathematics, a Kaprekar number for a given base is a non-negative integer, the representation of whose square in that base can be split into two parts that add up to the original number again. For instance, 45 is a Kaprekar number, because 45Â² = 2025 and 20+25 = 45.

The Task 
You are given the two positive integers  and , where  is lower than . Write a program to determine how many Kaprekar numbers are there in the range between  and  (both inclusive) and display them all.

Input Format

There will be two lines of input: , lowest value , highest value//



import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner in = new Scanner(System.in);
        long p = in.nextInt();
        long q = in.nextInt();
        int counter=0;
        for(long i=p;i<=q;i++){
            long sq=i*i;
            int l = String.valueOf(sq).length();
                int d= (int)Math.ceil(l/2);
                int k = l-d;
                int first= (int)((sq)/Math.pow(10,k));
                int last = (int)((sq)%Math.pow(10,k));
                //System.out.println(first);
                //System.out.println(last);
            if(last!=0){
                if (first+last ==i){
                    System.out.print(i+" ");
                    counter++;
                    }
                }
            }
        if(counter==0){
            System.out.print("INVALID RANGE");
        }
        }
    }
